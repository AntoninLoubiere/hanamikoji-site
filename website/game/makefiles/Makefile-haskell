# SPDX-License-Identifier: GPL-2.0-or-later
# Copyright (c) 2020 Association Prologin <association@prologin.org>

# When running in server mode, simply take all the files extracted from the
# archive.
ifdef STECHEC_SERVER
  CHAMPION_FILES = $(wildcard *)
endif

CXXFLAGS = -ggdb3 -Wall -std=c++17 -fPIC -O2
GHC ?= ghc
HSC2HS ?= hsc2hs

GHC_FLAGS = -pgml $(CXX) -O9 -dynamic --make -shared -fPIC \
			-L$(shell $(GHC) --print-libdir) \
			-lHSrts-ghc$(shell $(GHC) --numeric-version)

CPPFLAGS += -I$(shell $(GHC) --print-libdir)/include

all: champion.so

cxx_sources = $(filter %.cc,$(CHAMPION_FILES))
objs += $(cxx_sources:.cc=.o)
to_clean = $(objs)

hs_ffi_sources = $(filter %.hsc, $(CHAMPION_FILES))
hs_ffi_gen = $(hs_ffi_sources:.hsc=.hs)

hs_sources = $(filter %.hs,$(CHAMPION_FILES))
hs_sources += $(hs_ffi_gen)

to_clean += $(hs_ffi_gen)
to_clean += $(hs_sources:.hs=.hi)
to_clean += $(hs_sources:.hs=.o)
to_clean += $(hs_sources:.hs=_stub.h)

%.hs: %.hsc
	$(HSC2HS) -o $@ $^

champion.so: $(objs) $(hs_sources)
	$(GHC) $(GHC_FLAGS) -o $@ $^ -shared

clean:
	@$(RM) _lang # In case the tar rule was interrupted
	$(RM) $(to_clean)

distclean: clean
	$(RM) champion.so champion.tgz

champion.tgz: $(CHAMPION_FILES)
	@echo "haskell" > _lang
	tar czf $@ $^ _lang
	@rm _lang

tar: champion.tgz

.PHONY: tar clean distclean
