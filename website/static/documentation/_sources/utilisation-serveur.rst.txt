===========================
Utilisation avec le serveur
===========================

Pour utiliser le serveur, créez un compte puis `codez un champion <champion.html>`_

Téléverser un champion sur le serveur
=====================================

Si vous avez ``make`` d’installé, il vous suffit de lancer la commande
``make tar`` dans le dossier pour obtenir l’archive. Sinon, il suffit
créer une archive avec tous les fichiers du dossier (les fichiers
Makefile et Makefile-<langage> ne sont pas nécessaire par contre).
Une fois l’archive obtenue, vous pouvez la téléverser sur le
serveur sur la `page ajouter un champion </upload/>`_.


.. note::
   Si le serveur ne détecte pas le langage, vous pouvez ajouter un fichier texte
   nommé ``_lang`` avec le nom du langage dedans (i.e. le nom du dossier de
   l’archive des patrons de code).

Lancer un match
===============

Une fois que les champions ont été téléversés et que le serveur a
terminé de compiler votre code, il suffit de se rendre sur la `page lancer
un match </add_match/>`_.

Distribution des cartes
=======================

Sur chaque ligne les cartes sont représentées par des entiers de 0 à 6 séparés par des espaces, et
représentent dans l'ordre, les 6 cartes distribuées au premier joueur au début de la manche, les 6
suivantes sont les 6 cartes de début de manche du second joueur. Ensuite les cartes représentent les
cartes piochées à chaque tour, la dernière carte n'est donc pas utilisé.

Exemple :

.. code::

   0 0 1 1 2 2 3 3 3 4 4 4 6 5 6 5 6 5 6 5 6
   0 0 1 1 2 2 3 3 3 4 4 4 5 6 5 6 5 6 5 6 6
   0 0 1 1 2 2 3 3 3 4 4 4 6 5 6 5 6 5 6 5 6

Ici, lors des trois manches, le premier joueur reçoit les cartes Geisha de valeur 2 (0, 1, 2) puis
piochera au fur et à mesure les cartes de valeur 4 (5).
Le second joueur reçoit les cartes Geisha de valeur 3 (3, 4) puis piochera au fur et à mesure quatre
cartes de valeur 5 (6). Une carte de valeur 5 est défaussée.

Vous pouvez utiliser `ce script python <_static/random_map.py>`_ pour générer une distribution de
cartes aléatoire.


Langages supportés
==================

Langages supportés :

- c
- c++
- ocaml
- python

Pour

- java
- js
- php
- rust

veuillez nous demander.

